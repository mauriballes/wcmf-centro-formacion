# wCMF Generator properties

# Profile configuration
# The following properties define the modeling profile.
profilename = Chronos
profileUmlFile = ${basePath}/metamodel/chronos.profile.uml


# Input configuration
# The following properties define the project specific input model.
# libraryPackage and applicationPackage are supposed to be direct children of rootPackage
modelUmlFile = cwm-export.uml
transformedModelUmlFile = model-transformed
rootPackage = wcmf base::root
libraryPackage = wcmf
applicationPackage = app


# Check configuration
# The following properties configure the generator checks. preCheckFile is run before model
# to model transformation and postCheckFile is run afterwards
doCheck = true
preCheckFile = cartridge::Wcmf::checks::pre
postCheckFile = cartridge::Wcmf::checks::post
requiredControllerSuperclass = uml-generated::${rootPackage}::${libraryPackage}::lib::presentation::Controller
requiredNodeSuperclass = uml-generated::${rootPackage}::${libraryPackage}::lib::model::Node


# Backup configuration
# The following properties configure the backup.
doBackup = false
backupDir = backup


# Generator configuration
# The following properties configure the code generation from the input model.
expand = cartridge::Wcmf::templates::Root::root
outputEncoding = UTF-8
configFileDefault = config.ini
projectname = wcmf baseapp
targetDir = ${targetDir}
prExcludes = *.svn-base, .git, vendor
printGenerateDate = false
headerText = ""
