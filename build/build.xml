<project name="wCMF app" default="dist" basedir=".">
  <description>wCMF application build file</description>

  <property file="build.properties"/>
  <property file="${generator.base}/build_wcmf.info" prefix="generator"/>

  <target name="init">
    <tstamp/>
  </target>

  <target name="m2m-papyrus"
    description="transform the input model from papyrus to cwm format" >
    <replaceregexp file="${generator.workdir}/model.uml"
               match='xmi:version="20131001"'
               replace='xmi:version="2.1"'
    />
    <replaceregexp file="${generator.workdir}/model.uml"
               match='xmlns:xmi="http://www.omg.org/spec/XMI/20131001"'
               replace='xmlns:xmi="http://www.omg.org/spec/XMI/2.1"'
    />
    <replaceregexp file="${generator.workdir}/model.uml"
               match='xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML"'
               replace='xmlns:uml="http://www.eclipse.org/uml2/2.1.0/UML"'
    />
  </target>

  <target name="generate" depends="m2m-papyrus"
    description="generate the code from the model" >
    <java jar="${generator.base}/ChronosGenerator.jar"
          dir="${generator.workdir}" fork="true" >
      <sysproperty key="java.library.path" path="${generator.base}/lib"/>
      <arg value="${generator.base}/cartridge/Wcmf/workflow/wcmf.oaw"/>
      <arg value="-generatorVersion=wcmf-${generator.version}.${generator.build}"/>
      <arg value="-basePath=${generator.base}/"/>
      <arg value="-propertyFile=${generator.workdir}/workflow.properties"/>
      <arg value="-targetDir=${generator.target}"/>
    </java>
  </target>

  <target name="buildinfo" depends="init"
    description="generate the build version file" >
    <propertyfile file="${build.info}"
     comment="Build Information File - DO NOT MODIFY">
        <entry key="version"
         value="${version}"/>
        <entry key="build"
         type="int" default="0000"
         operation="+" pattern="0000"/>
    </propertyfile>
  </target>

  <target name="properties" description="define properties">
    <property file="${build.info}"/>
    <property name="build.base" value="../"/>
    <property name="package.file" value="${build.base}${app.name}_${version}.${build}.zip"/>
  </target>

  <target name="compile" description="build the frontend" >
    <condition property="dojo.build.script" value="${dojo.build.script_windows}"
               else="${dojo.build.script_unix}">
       <os family="windows"/>
    </condition>
    <condition property="dojo.build.args" value="profile=${dojo.build.profile}"
               else="--bin java --profile ${dojo.build.profile}">
       <os family="windows"/>
    </condition>
    <exec dir="${dojo.build.base}" executable="${dojo.build.script}" output="${dojo.build.log}">
      <arg line="${dojo.build.args}"/>
    </exec>
    <loadfile property="compile.log" srcFile="${dojo.build.log}"/>
    <echo level="debug">${compile.log}</echo>
  </target>

  <target name="dist-fe" depends="properties,buildinfo"
    description="build the distribution without clean and compile targets" >
    <mkdir dir="${dist.dir}"/>
    <copy todir="${dist.dir}/vendor">
      <fileset dir="${build.base}vendor/">
        <exclude name="**/demo*/**"/>
        <exclude name="**/sample*/**"/>
        <exclude name="**/example*/**"/>
        <exclude name="**/test*/**"/>
        <exclude name="**/doc*/**"/>
        <exclude name="**/develop*/**"/>
        <exclude name="**/.git*"/>
        <exclude name="**/.svn*"/>
        <exclude name="zf1/zend-locale/library/Zend/Locale/Data/*"/>
        <exclude name="olympos//**"/>
        <exclude name="wcmf/asset-installer/**"/>
        <include name="**"/>
        <include name="wcmf/wcmf/src/wcmf/test/lib/**"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/vendor">
      <fileset dir="${build.base}vendor/">
        <include name="wcmf/wcmf/src/wcmf/test/lib/**"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/${app.name}">
      <fileset dir="${build.base}${app.name}/">
        <exclude name="cache/"/>
        <exclude name="log/"/>
        <exclude name="public/"/>
        <exclude name="release/"/>
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/${app.name}/public">
      <fileset dir="${build.base}${app.name}/public">
        <include name=".htaccess" />
        <include name="*.php" />
      </fileset>
    </copy>
    <!-- replace rewriteBase in .htaccess -->
    <property name="path.app" location="${build.base}/${app.name}"/>
    <property name="path.dist" location="${dist.dir}/${app.name}"/>
    <script language="javascript"><![CDATA[
      var path1 = new String(project.getProperty("path.app"));
      var path2 = new String(project.getProperty("path.dist"));
      var sep = new String("/");
      project.setProperty("rewritebase.search", getPathFromBase(path1, path2, 1));
      project.setProperty("rewritebase.replace", getPathFromBase(path1, path2, 2));
      function getPathFromBase(path1, path2, index) {
        var path1Parts = path1.replace(/\\/g, sep).split(sep);
        var path2Parts = path2.replace(/\\/g, sep).split(sep);
        for(var i=0, count=Math.min(path1Parts.length, path2Parts.length); i<count; i++) {
          if (path1Parts[i] == path2Parts[i]) {
            path1Parts[i] = path2Parts[i] = "";
          }
          else {
            break;
          }
        }
        path1 = path1Parts.join(sep).replace(/\/\/+/g, sep);
        path2 = path2Parts.join(sep).replace(/\/\/+/g, sep);
        return index == 1 ? path1 : path2;
      }
    ]]></script>
    <replaceregexp file="${dist.dir}/${app.name}/.htaccess"
      match="RewriteBase (.*)${rewritebase.search}"
      replace="RewriteBase \1${rewritebase.replace}"
    />
    <copy file="${build.info}" todir="${dist.dir}"/>
  </target>

  <target name="dist" depends="properties,clean,compile,dist-fe"
    description="build the distribution" >
    <copy todir="${dist.dir}/${app.name}/public">
      <fileset dir="${build.base}${app.name}/release">
        <exclude name="js/"/>
        <exclude name="vendor/"/>
        <exclude name="build-report.txt"/>
        <exclude name="**/*.js.map"/>
        <exclude name="**/*.js.uncompressed.js"/>
        <include name="**"/>
      </fileset>
      <fileset dir="${build.base}${app.name}/release">
        <include name="js/App.js"/>
        <include name="js/App.js.map"/>
        <include name="js/App.js.uncompressed.js"/>
        <include name="**/nls/**/*_de.*"/>
        <include name="**/nls/**/*_en.*"/>
        <include name="**/nls/**/*_en-us.*"/>
        <include name="vendor/dojo/dojo/dojo.js"/>
        <include name="vendor/dojo/dojo/dojo.js.map"/>
        <include name="vendor/dojo/dojo/dojo.js.uncompressed.js"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/${app.name}/public">
      <fileset dir="${build.base}${app.name}/public">
        <!-- dojo resources -->
        <include name="vendor/dojo/dojo/resources/**/*.*"/>
        <include name="vendor/sitepen/dgrid/css/images/*.*"/>
        <!-- fonts -->
        <include name="vendor/font-awesome/fonts/*.*"/>
        <!-- elfinder -->
        <include name="vendor/studio-42/elfinder-js/css/*.*"/>
        <include name="vendor/studio-42/elfinder-js/img/*.*"/>
        <include name="vendor/studio-42/elfinder-js/js/i18n/elfinder.de.js"/>
        <include name="vendor/jquery/jquery.min.js"/>
        <include name="vendor/jquery-ui/jquery-ui.min.js"/>
        <include name="vendor/jquery-ui/themes/smoothness/jquery-ui.min.css"/>
        <!-- ckeditor -->
        <include name="vendor/ckeditor/ckeditor/skins/moono/**/*.*"/>
        <include name="vendor/ckeditor/ckeditor/plugins/**/*.*"/>
        <include name="vendor/ckeditor/ckeditor/lang/de.js"/>
        <include name="vendor/ckeditor/ckeditor/lang/en.js"/>
        <include name="vendor/ckeditor-plugins/**/*.*"/>
        <!-- config -->
        <include name="js/config/*.*"/>
      </fileset>
    </copy>
    <copy file="${build.base}${app.name}/release/${dojo.build.report}" todir="./"/>
    <delete dir="${build.base}${app.name}/release"/>
  </target>

  <target name="clean" depends="properties"
    description="clean up" >
    <delete dir="${build.base}${app.name}/release"/>
    <delete dir="${dist.dir}"/>
    <delete file="${dojo.build.log}"/>
    <delete file="${dojo.build.report}"/>
    <delete file="${package.file}"/>
  </target>
</project>
